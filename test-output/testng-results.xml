<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="18" total="28" passed="8" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[----DB is connected--------]]>
    </line>
    <line>
      <![CDATA[---------DB is disconnected--------]]>
    </line>
  </reporter-output>
  <suite started-at="2022-08-24T14:48:58 IST" name="Suite" finished-at="2022-08-24T14:49:03 IST" duration-ms="4649">
    <groups>
    </groups>
    <test started-at="2022-08-24T14:48:58 IST" name="Test" finished-at="2022-08-24T14:49:03 IST" duration-ms="4649">
      <class name="RMGYANTRA.CreateProjectTest">
        <test-method signature="createProjectTest()[pri:3, instance:RMGYANTRA.CreateProjectTest@6392827e]" started-at="2022-08-24T14:49:02 IST" name="createProjectTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProjectTest -->
      </class> <!-- RMGYANTRA.CreateProjectTest -->
      <class name="RMGYANTRA.CreateAndDeleteAProjectTest">
        <test-method signature="deleteSingleProjectTest()[pri:10, instance:RMGYANTRA.CreateAndDeleteAProjectTest@209da20d]" started-at="2022-08-24T14:49:02 IST" name="deleteSingleProjectTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteSingleProjectTest -->
      </class> <!-- RMGYANTRA.CreateAndDeleteAProjectTest -->
      <class name="RMGYANTRA.GetAllProjectTest">
        <test-method signature="getProjectTest()[pri:4, instance:RMGYANTRA.GetAllProjectTest@e15b7e8]" started-at="2022-08-24T14:49:02 IST" name="getProjectTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProjectTest -->
      </class> <!-- RMGYANTRA.GetAllProjectTest -->
      <class name="RMGYANTRA.CreateAndUpdateProjectTest">
        <test-method signature="updateProjectTest()[pri:9, instance:RMGYANTRA.CreateAndUpdateProjectTest@5d0a1059]" started-at="2022-08-24T14:49:03 IST" name="updateProjectTest" finished-at="2022-08-24T14:49:03 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProjectTest -->
      </class> <!-- RMGYANTRA.CreateAndUpdateProjectTest -->
      <class name="RMGYANTRA.CreateProjectGetAndVerifyInDB">
        <test-method signature="endToEndScenarioTest()[pri:2, instance:RMGYANTRA.CreateProjectGetAndVerifyInDB@bae7dc0]" started-at="2022-08-24T14:49:00 IST" name="endToEndScenarioTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="1445" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "java.sql.Statement.executeQuery(String)" because "this.statement" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "java.sql.Statement.executeQuery(String)" because "this.statement" is null
at GenericLibrary.DataBaseUtility.executeQueryAndReturnData(DataBaseUtility.java:52)
at RMGYANTRA.CreateProjectGetAndVerifyInDB.endToEndScenarioTest(CreateProjectGetAndVerifyInDB.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndScenarioTest -->
      </class> <!-- RMGYANTRA.CreateProjectGetAndVerifyInDB -->
      <class name="RMGYANTRA.CreateProjectUsingJSONFileTest">
        <test-method signature="createProjectUsingJSONFileTest()[pri:6, instance:RMGYANTRA.CreateProjectUsingJSONFileTest@342c38f8]" started-at="2022-08-24T14:49:02 IST" name="createProjectUsingJSONFileTest" finished-at="2022-08-24T14:49:03 IST" duration-ms="144" status="FAIL">
          <exception class="java.lang.NoSuchMethodError">
            <message>
              <![CDATA['void org.hamcrest.Matcher.describeMismatch(java.lang.Object, org.hamcrest.Description)']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchMethodError: 'void org.hamcrest.Matcher.describeMismatch(java.lang.Object, org.hamcrest.Description)'
at io.restassured.internal.util.MatcherErrorMessageBuilder.buildError(MatcherErrorMessageBuilder.java:35)
at io.restassured.internal.util.MatcherErrorMessageBuilder$buildError.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:148)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validateStatusCodeAndStatusLine(ResponseSpecificationImpl.groovy:549)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at RMGYANTRA.CreateProjectUsingJSONFileTest.createProjectUsingJSONFileTest(CreateProjectUsingJSONFileTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchMethodError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProjectUsingJSONFileTest -->
      </class> <!-- RMGYANTRA.CreateProjectUsingJSONFileTest -->
      <class name="RMGYANTRA.BasicAuthTest">
        <test-method is-config="true" signature="beforeConfiguration()[pri:0, instance:RMGYANTRA.BasicAuthTest@21e360a]" started-at="2022-08-24T14:48:57 IST" name="beforeConfiguration" finished-at="2022-08-24T14:48:58 IST" duration-ms="1546" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[----DB is connected--------]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeConfiguration -->
        <test-method signature="basicAuthTest()[pri:1, instance:RMGYANTRA.BasicAuthTest@21e360a]" started-at="2022-08-24T14:48:58 IST" name="basicAuthTest" finished-at="2022-08-24T14:49:00 IST" duration-ms="1846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicAuthTest -->
        <test-method is-config="true" signature="afterConfiguration()[pri:0, instance:RMGYANTRA.BasicAuthTest@21e360a]" started-at="2022-08-24T14:49:03 IST" name="afterConfiguration" finished-at="2022-08-24T14:49:03 IST" duration-ms="19" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[---------DB is disconnected--------]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterConfiguration -->
      </class> <!-- RMGYANTRA.BasicAuthTest -->
      <class name="RMGYANTRA.CreateProjectUsingMapTest">
        <test-method signature="createProjectUsingMapTest()[pri:8, instance:RMGYANTRA.CreateProjectUsingMapTest@c88a337]" started-at="2022-08-24T14:49:03 IST" name="createProjectUsingMapTest" finished-at="2022-08-24T14:49:03 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProjectUsingMapTest -->
      </class> <!-- RMGYANTRA.CreateProjectUsingMapTest -->
      <class name="RMGYANTRA.CreateProjectUsingJSONObjectTest">
        <test-method signature="createProjectUsingJSONObjectTest()[pri:7, instance:RMGYANTRA.CreateProjectUsingJSONObjectTest@1b2abca6]" started-at="2022-08-24T14:49:02 IST" name="createProjectUsingJSONObjectTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProjectUsingJSONObjectTest -->
      </class> <!-- RMGYANTRA.CreateProjectUsingJSONObjectTest -->
      <class name="RMGYANTRA.GetSingleProjectTest">
        <test-method signature="getSingleProjectTest()[pri:5, instance:RMGYANTRA.GetSingleProjectTest@2ed2d9cb]" started-at="2022-08-24T14:49:02 IST" name="getSingleProjectTest" finished-at="2022-08-24T14:49:02 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleProjectTest -->
      </class> <!-- RMGYANTRA.GetSingleProjectTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
